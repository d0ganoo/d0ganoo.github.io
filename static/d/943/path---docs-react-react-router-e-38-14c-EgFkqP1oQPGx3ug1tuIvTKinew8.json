{"data":{"markdownRemark":{"fields":{"slug":"/docs/React/react-router"},"id":"8ac1889d-5a43-52ca-9684-4126ddd8e319","html":"<h1 align=\"center\">\n  react-router-dom\n</h1>\n<h4 id=\"ces-deux-exemples-font-exactement-la-même-chose\"><a href=\"#ces-deux-exemples-font-exactement-la-m%C3%AAme-chose\" aria-label=\"ces deux exemples font exactement la même chose permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ces deux exemples font exactement la même chose</h4>\n<pre><code class=\"language-Javascript\">import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch,Link } from 'react-router-dom';\n\nconst Home = () => (\n  &#x3C;div>\n      &#x3C;h2>Home&#x3C;/h2>\n  &#x3C;/div>\n);\n\nconst About = () => (\n  &#x3C;div>\n      &#x3C;h2>About&#x3C;/h2>\n  &#x3C;/div>\n);\n\nconst Topic = ({ match }) => (\n  &#x3C;div>\n      &#x3C;h3>{match.params.topicId}&#x3C;/h3>\n  &#x3C;/div>\n);\n\nconst Topics = ({ match }) => (\n  &#x3C;div>\n    &#x3C;h2>Topics&#x3C;/h2>\n    &#x3C;ul>\n      &#x3C;li>\n        &#x3C;Link to={`${match.url}/rendering`}>Rendering with React&#x3C;/Link>\n      &#x3C;/li>\n      &#x3C;li>\n        &#x3C;Link to={`${match.url}/components`}>Components&#x3C;/Link>\n      &#x3C;/li>\n      &#x3C;li>\n        &#x3C;Link to={`${match.url}/props-v-state`}>Props v. State&#x3C;/Link>\n      &#x3C;/li>\n    &#x3C;/ul>\n\n    &#x3C;Route path={`${match.path}/:topicId`} component={Topic} />\n    &#x3C;Route\n      exact\n      path={match.path}\n      render={() => &#x3C;h3>Please select a topic.&#x3C;/h3>}\n    />\n  &#x3C;/div>\n);\n\nconst BasicExample = () => (\n  &#x3C;Router>\n      &#x3C;div>\n          &#x3C;ul>\n              &#x3C;li>\n                  &#x3C;Link to=\"/\">Home&#x3C;/Link>\n              &#x3C;/li>\n              &#x3C;li>\n                  &#x3C;Link to=\"/about\">About&#x3C;/Link>\n              &#x3C;/li>\n              &#x3C;li>\n                  &#x3C;Link to=\"/topics\">Topics&#x3C;/Link>\n              &#x3C;/li>\n          &#x3C;/ul>\n\n          &#x3C;hr />\n\n          &#x3C;Route exact path=\"/\" component={Home} />\n          &#x3C;Route path=\"/about\" component={About} />\n          &#x3C;Route path=\"/topics\" component={Topics} />\n      &#x3C;/div>\n  &#x3C;/Router>\n);\n\n\nrender(\n    &#x3C;BasicExample />,\n    document.getElementById('root')\n);\n</code></pre>\n<pre><code class=\"language-Javascript\">import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch,Link } from 'react-router-dom';\n\nconst Home = () => (\n  &#x3C;div>\n      &#x3C;h2>Home&#x3C;/h2>\n  &#x3C;/div>\n);\n\nconst About = () => (\n  &#x3C;div>\n      &#x3C;h2>About&#x3C;/h2>\n  &#x3C;/div>\n);\n\nconst Topic = ({ match }) => (\n  &#x3C;div>\n      &#x3C;h3>{match.params.topicId}&#x3C;/h3>\n  &#x3C;/div>\n);\n\n\nclass Topics extends Component {\n  constructor(props){\n    super(props)\n  }\n  render(){\n    const {match} = this.props;\n    \n    return(\n      &#x3C;div>\n        &#x3C;h2>Topics&#x3C;/h2>\n        &#x3C;ul>\n          &#x3C;li>\n            &#x3C;Link to={`${match.url}/rendering`}>Rendering with React&#x3C;/Link>\n          &#x3C;/li>\n          &#x3C;li>\n            &#x3C;Link to={`${match.url}/components`}>Components&#x3C;/Link>\n          &#x3C;/li>\n          &#x3C;li>\n            &#x3C;Link to={`${match.url}/props-v-state`}>Props v. State&#x3C;/Link>\n          &#x3C;/li>\n        &#x3C;/ul>\n\n        &#x3C;Route path={`${match.path}/:topicId`} component={Topic} />\n        &#x3C;Route\n          exact\n          path={match.path}\n          render={() => &#x3C;h3>Please select a topic.&#x3C;/h3>}\n        />\n      &#x3C;/div>\n    );\n  }\n}\n\nconst BasicExample = () => (\n  &#x3C;Router>\n      &#x3C;div>\n          &#x3C;ul>\n              &#x3C;li>\n                  &#x3C;Link to=\"/\">Home&#x3C;/Link>\n              &#x3C;/li>\n              &#x3C;li>\n                  &#x3C;Link to=\"/about\">About&#x3C;/Link>\n              &#x3C;/li>\n              &#x3C;li>\n                  &#x3C;Link to=\"/topics\">Topics&#x3C;/Link>\n              &#x3C;/li>\n          &#x3C;/ul>\n\n          &#x3C;hr />\n\n          &#x3C;Route exact path=\"/\" component={Home} />\n          &#x3C;Route path=\"/about\" component={About} />\n          &#x3C;Route path=\"/topics\" component={Topics} />\n      &#x3C;/div>\n  &#x3C;/Router>\n);\n\n\nrender(\n    &#x3C;BasicExample />,\n    document.getElementById('root')\n);\n</code></pre>\n<h4 id=\"router-avec-variables-en-paramètre--component-statefull-mais-perte-de-la-fonctionnalité-pour-récupérer-les-données-via-url-route-pathmatchpathtopicid\"><a href=\"#router-avec-variables-en-param%C3%A8tre--component-statefull-mais-perte-de-la-fonctionnalit%C3%A9-pour-r%C3%A9cup%C3%A9rer-les-donn%C3%A9es-via-url-route-pathmatchpathtopicid\" aria-label=\"router avec variables en paramètre  component statefull mais perte de la fonctionnalité pour récupérer les données via url route pathmatchpathtopicid permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Router avec variables en paramètre | Component statefull mais perte de la fonctionnalité pour récupérer les données via url (&#x3C;Route path={<code>${match.path}/:topicId</code>})</h4>\n<pre><code class=\"language-Javascript\">const Home = () => (\n  &#x3C;div>\n      &#x3C;h2>Home&#x3C;/h2>\n  &#x3C;/div>\n);\n\nconst About = () => (\n  &#x3C;div>\n      &#x3C;h2>About&#x3C;/h2>\n  &#x3C;/div>\n);\n\nclass Topic extends Component{\n  constructor(props){\n    super(props);\n  }\n  render(){\n    return(\n      &#x3C;div>\n        &#x3C;h3>Bonjour {this.props.extra}&#x3C;/h3>\n      &#x3C;/div>\n    );\n  }\n}\n\nclass Topics extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      profils: [1,2,3,4,5,6,7,8,9]\n    };\n  }\n  render(){\n    const {match, nom} = this.props;\n    let prenom = 'Francois';\n\n    return(\n      &#x3C;div>\n        &#x3C;h2>Topics&#x3C;/h2>\n        &#x3C;ul>\n          &#x3C;li>\n            &#x3C;Link to={`${match.url}/rendering`}>Rendering with React&#x3C;/Link>\n          &#x3C;/li>\n          &#x3C;li>\n            &#x3C;Link to={`${match.url}/components`}>Components&#x3C;/Link>\n          &#x3C;/li>\n          &#x3C;li>\n            &#x3C;Link to={`${match.url}/props-v-state`}>Props v. State&#x3C;/Link>\n          &#x3C;/li>\n        &#x3C;/ul>\n          &#x3C;Route path={`${match.path}/:topicId`}  \n            render={() => &#x3C;Topic {...this.props} extra={`${prenom} ${nom}`}  state={this.state.profils}/>} />\n          &#x3C;Route\n            exact\n            path={match.path}\n            render={() => &#x3C;h3>Please select a topic.&#x3C;/h3>}\n          />\n      &#x3C;/div>\n    );\n  }\n}\n\nconst BasicExample = () => {\n  const tata = \"FF\";\n  return (\n    &#x3C;Router>\n      &#x3C;div>\n        &#x3C;ul>\n          &#x3C;li>\n            &#x3C;Link to=\"/\">Home&#x3C;/Link>\n          &#x3C;/li>\n          &#x3C;li>\n            &#x3C;Link to=\"/about\">About&#x3C;/Link>\n          &#x3C;/li>\n          &#x3C;li>\n            &#x3C;Link to=\"/topics\">Topics&#x3C;/Link>\n          &#x3C;/li>\n        &#x3C;/ul>\n\n        &#x3C;hr />\n\n        &#x3C;Route exact path=\"/\" component={Home} />\n        &#x3C;Route path=\"/about\" component={About} />\n        &#x3C;Route path=\"/topics\" render={props => &#x3C;Topics {...props} nom={tata}/>}/>\n      &#x3C;/div>\n    &#x3C;/Router>\n    );\n};\n\n\nrender(\n    &#x3C;BasicExample />,\n    document.getElementById('root')\n);\n</code></pre>","frontmatter":{"date":null,"title":"React-router-dom","root":"/docs"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}